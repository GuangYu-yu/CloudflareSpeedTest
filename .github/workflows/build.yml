name: 构建 CloudflareSpeedTest
on:  
  workflow_dispatch:   # 允许手动触发

jobs:  
  build:  
    name: 构建  
    runs-on: ubuntu-latest  

    steps:  
      - name: 检出代码  
        uses: actions/checkout@v4  

      - name: 删除旧版本
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({
              owner,
              repo
            });
            
            for (const release of releases.data) {
              await github.rest.repos.deleteRelease({
                owner,
                repo,
                release_id: release.id
              });
              
              if (release.tag_name) {
                try {
                  await github.rest.git.deleteRef({
                    owner,
                    repo,
                    ref: `tags/${release.tag_name}`
                  });
                } catch (e) {
                  console.log(`Failed to delete tag ${release.tag_name}: ${e}`);
                }
              }
            }

      - name: 设置 Go 环境  
        uses: actions/setup-go@v5
        with:  
          go-version: '1.16'  

      - name: 下载依赖
        run: go mod tidy

      - name: 构建所有平台  
        run: |  
          # 创建构建目录和存储目录
          mkdir -p build
          mkdir -p binaries

          # 安装压缩工具
          sudo apt-get update
          sudo apt-get install -y upx zstd

          # 构建并压缩函数
          build_and_compress() {
            local OS=$1
            local ARCH=$2
            local SUFFIX=$3
            local NAME="CloudflareST${SUFFIX}"
            
            # 使用更激进的编译优化
            env GOOS=$OS GOARCH=$ARCH CGO_ENABLED=0 \
              go build -ldflags="-s -w -extldflags=-static" \
              -trimpath -a \
              -gcflags="all=-l=4" \
              -o "$NAME"
            
            # UPX 极限压缩
            upx --best --ultra-brute "$NAME" || true
            
            # 使用 zstd 二次压缩
            zstd -19 --ultra -T0 "$NAME" -o "${NAME}.zst"
            
            # 比较大小并使用较小的版本
            if [ -f "${NAME}.zst" ]; then
              orig_size=$(stat -c%s "$NAME")
              zst_size=$(stat -c%s "${NAME}.zst")
              if [ $zst_size -lt $orig_size ]; then
                mv "${NAME}.zst" "$NAME"
              else
                rm "${NAME}.zst"
              fi
            fi
            
            tar -czf "build/CloudflareST_${OS}_${ARCH}.tar.gz" "$NAME"
            cp "$NAME" "binaries/CloudflareST_${OS}_${ARCH}"
            rm "$NAME"
          }

          # Linux
          build_and_compress linux amd64
          build_and_compress linux 386
          build_and_compress linux arm64
          build_and_compress linux arm
          
          # MIPS
          env GOOS=linux GOARCH=mips GOMIPS=softfloat go build -ldflags="-s -w" -o CloudflareST
          upx --best CloudflareST || true
          tar -czf build/CloudflareST_linux_mips.tar.gz CloudflareST
          cp CloudflareST binaries/CloudflareST_linux_mips
          rm CloudflareST
          
          env GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-s -w" -o CloudflareST
          upx --best CloudflareST || true
          tar -czf build/CloudflareST_linux_mipsle.tar.gz CloudflareST
          cp CloudflareST binaries/CloudflareST_linux_mipsle
          rm CloudflareST

          # Windows
          build_and_compress windows amd64 .exe
          build_and_compress windows 386 .exe

          # macOS
          build_and_compress darwin amd64
          build_and_compress darwin arm64

      - name: 生成 SHA256 校验和  
        run: |  
          cd build  
          sha256sum * > sha256sum.txt  

      - name: 提交并推送更改
        if: success()
        run: |
          if [ -d "binaries" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git pull origin master --no-rebase
            git add binaries/
            current_time=$(date '+%Y/%m/%d %H:%M:%S')
            if ! git diff --staged --quiet; then
              git commit -m "Update compressed binaries on ${current_time}"
              git push
            fi
          fi

      - name: 上传构建产物  
        uses: actions/upload-artifact@v4
        with:  
          name: CloudflareST-构建产物  
          path: build/*  

      - name: 创建发布版本  
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'workflow_dispatch'  
        with:  
          tag_name: build-${{ github.run_number }}  
          name: 构建版本 ${{ github.run_number }}  
          draft: false  
          prerelease: false  
          files: |  
            build/*.tar.gz  
            build/sha256sum.txt  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
